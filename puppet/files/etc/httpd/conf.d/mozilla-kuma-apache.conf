# HACK: Make the server reload after every hit to refresh django code
MaxRequestsPerChild 1

WSGISocketPrefix /var/run/wsgi

#<VirtualHost *:443 *:80>
<VirtualHost *:80>

    ServerName dev.developer.mozilla.org

    DirectoryIndex index.html
    Options -Indexes
    
    RewriteEngine On

    DocumentRoot /vagrant/webroot

    <Directory /vagrant/webroot>
        Options +FollowSymLinks
        AllowOverride all
        Order allow,deny
        Allow from all
    </Directory>

    <Directory "/vagrant/webroot">
        # Possible values for the Options directive are "None", "All",
        # or any combination of:
        #   Indexes Includes FollowSymLinks SymLinksifOwnerMatch ExecCGI MultiViews
        #
        # Note that "MultiViews" must be named *explicitly* --- "Options All"
        # doesn't give it to you.
        #
        # The Options directive is both complicated and important.  Please see
        # http://httpd.apache.org/docs-2.2/mod/core.html#options
        # for more information.
        Options All
        # AllowOverride controls what directives may be placed in .htaccess files.
        # It can be "All", "None", or any combination of the keywords:
        #   Options FileInfo AuthConfig Limit
        AllowOverride All
        # Controls who can get stuff from this server.
        Order allow,deny
        Allow from all
    </Directory>

    Alias /media/ "/vagrant/media/"
    Alias /uploads/ "/home/vagrant/uploads/"
    Alias /admin-media/ "/vagrant/vendor/src/django/django/contrib/admin/media/"

    WSGIDaemonProcess kuma processes=8 threads=1 maximum-requests=4000
    #WSGIDaemonProcess kuma processes=1 threads=1 maximum-requests=1 user=vagrant group=vagrant
    WSGIProcessGroup kuma

    WSGIScriptAlias /mwsgi "/vagrant/wsgi/kuma.wsgi"

	AllowEncodedSlashes On   

	# mod_proxy rules
	#ProxyPass /@api http://localhost:8081 retry=1
	#ProxyPassReverse /@api http://localhost:8081
	SetEnv force-proxy-request-1.0 1
	SetEnv proxy-nokeepalive 1

    <Proxy *>
        AddDefaultCharset off
        Order deny,allow
        Deny from all
        Allow from all
    </Proxy>

    # Proxy any requests for non-existent resources under /media/uploads to the
    # production site. That way, we don't need an export of files from prod for
    # references in a DB export from prod.
    #
    # FIXME: This is broken right now, because production forbids any referers
    # not from production for media assets. A referer-blocker addon might work
    SSLProxyEngine on
    RewriteCond /vagrant%{REQUEST_FILENAME} !-f
    RewriteCond /vagrant%{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_URI} /media/uploads/
    RewriteRule ^/media/uploads/(.*)$ https://developer.mozilla.org/media/uploads/$1 [P,L]

</VirtualHost>
